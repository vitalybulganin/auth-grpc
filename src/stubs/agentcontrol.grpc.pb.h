// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: agentcontrol.proto
#ifndef GRPC_agentcontrol_2eproto__INCLUDED
#define GRPC_agentcontrol_2eproto__INCLUDED

#include "agentcontrol.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace Avanpost {
namespace Sso {
namespace Agent {
namespace Grpc {

class AgentControl final {
 public:
  static constexpr char const* service_full_name() {
    return "Avanpost.Sso.Agent.Grpc.AgentControl";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>> AsyncGetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>>(AsyncGetUserApplicationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>> PrepareAsyncGetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>>(PrepareAsyncGetUserApplicationsRaw(context, request, cq));
    }
    // список приложений закрепленных за пользователем
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>> CreateSubscriptionChannel(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>>(CreateSubscriptionChannelRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>> AsyncCreateSubscriptionChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>>(AsyncCreateSubscriptionChannelRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>> PrepareAsyncCreateSubscriptionChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>>(PrepareAsyncCreateSubscriptionChannelRaw(context, cq));
    }
    // подписка на серверные сообщения
    virtual ::grpc::Status GetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>> AsyncGetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>>(AsyncGetFactorListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>> PrepareAsyncGetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>>(PrepareAsyncGetFactorListRaw(context, request, cq));
    }
    // список факторов пользователя
    virtual ::grpc::Status FactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::Avanpost::Sso::Agent::Grpc::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::Result>> AsyncFactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::Result>>(AsyncFactorBindingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::Result>> PrepareAsyncFactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::Result>>(PrepareAsyncFactorBindingRaw(context, request, cq));
    }
    // опреции с фактором аутентификации
    virtual ::grpc::Status GetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>> AsyncGetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>>(AsyncGetTemporaryAuthCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>> PrepareAsyncGetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>>(PrepareAsyncGetTemporaryAuthCodeRaw(context, request, cq));
    }
    virtual ::grpc::Status Authenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>> AsyncAuthenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>>(AsyncAuthenticateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>> PrepareAsyncAuthenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>>(PrepareAsyncAuthenticateRaw(context, request, cq));
    }
    virtual ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>> AsyncChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SessionResponse>> AsyncCreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SessionResponse>>(AsyncCreateSessionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SessionResponse>> PrepareAsyncCreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SessionResponse>>(PrepareAsyncCreateSessionRaw(context, request, cq));
    }
    virtual ::grpc::Status SetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>> AsyncSetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>>(AsyncSetUserCredentialRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>> PrepareAsyncSetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>>(PrepareAsyncSetUserCredentialRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // список приложений закрепленных за пользователем
      virtual void CreateSubscriptionChannel(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage,::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* reactor) = 0;
      // подписка на серверные сообщения
      virtual void GetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // список факторов пользователя
      virtual void FactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* request, ::Avanpost::Sso::Agent::Grpc::Result* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* request, ::Avanpost::Sso::Agent::Grpc::Result* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // опреции с фактором аутентификации
      virtual void GetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Authenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Authenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* AsyncGetUserApplicationsRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* PrepareAsyncGetUserApplicationsRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* CreateSubscriptionChannelRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* AsyncCreateSubscriptionChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* PrepareAsyncCreateSubscriptionChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>* AsyncGetFactorListRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>* PrepareAsyncGetFactorListRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::Result>* AsyncFactorBindingRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::Result>* PrepareAsyncFactorBindingRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* AsyncGetTemporaryAuthCodeRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* PrepareAsyncGetTemporaryAuthCodeRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* AsyncAuthenticateRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* PrepareAsyncAuthenticateRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SessionResponse>* AsyncCreateSessionRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SessionResponse>* PrepareAsyncCreateSessionRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* AsyncSetUserCredentialRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* PrepareAsyncSetUserCredentialRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>> AsyncGetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>>(AsyncGetUserApplicationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>> PrepareAsyncGetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>>(PrepareAsyncGetUserApplicationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>> CreateSubscriptionChannel(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>>(CreateSubscriptionChannelRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>> AsyncCreateSubscriptionChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>>(AsyncCreateSubscriptionChannelRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>> PrepareAsyncCreateSubscriptionChannel(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>>(PrepareAsyncCreateSubscriptionChannelRaw(context, cq));
    }
    ::grpc::Status GetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>> AsyncGetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>>(AsyncGetFactorListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>> PrepareAsyncGetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>>(PrepareAsyncGetFactorListRaw(context, request, cq));
    }
    ::grpc::Status FactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::Avanpost::Sso::Agent::Grpc::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::Result>> AsyncFactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::Result>>(AsyncFactorBindingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::Result>> PrepareAsyncFactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::Result>>(PrepareAsyncFactorBindingRaw(context, request, cq));
    }
    ::grpc::Status GetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>> AsyncGetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>>(AsyncGetTemporaryAuthCodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>> PrepareAsyncGetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>>(PrepareAsyncGetTemporaryAuthCodeRaw(context, request, cq));
    }
    ::grpc::Status Authenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>> AsyncAuthenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>>(AsyncAuthenticateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>> PrepareAsyncAuthenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>>(PrepareAsyncAuthenticateRaw(context, request, cq));
    }
    ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>> AsyncChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    ::grpc::Status CreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SessionResponse>> AsyncCreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SessionResponse>>(AsyncCreateSessionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SessionResponse>> PrepareAsyncCreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SessionResponse>>(PrepareAsyncCreateSessionRaw(context, request, cq));
    }
    ::grpc::Status SetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>> AsyncSetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>>(AsyncSetUserCredentialRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>> PrepareAsyncSetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>>(PrepareAsyncSetUserCredentialRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserApplications(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSubscriptionChannel(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage,::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* reactor) override;
      void GetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFactorList(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* request, ::Avanpost::Sso::Agent::Grpc::Result* response, std::function<void(::grpc::Status)>) override;
      void FactorBinding(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* request, ::Avanpost::Sso::Agent::Grpc::Result* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTemporaryAuthCode(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Authenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response, std::function<void(::grpc::Status)>) override;
      void Authenticate(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response, std::function<void(::grpc::Status)>) override;
      void ChangePassword(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSession(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response, std::function<void(::grpc::Status)>) override;
      void SetUserCredential(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* AsyncGetUserApplicationsRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* PrepareAsyncGetUserApplicationsRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* CreateSubscriptionChannelRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* AsyncCreateSubscriptionChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* PrepareAsyncCreateSubscriptionChannelRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>* AsyncGetFactorListRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>* PrepareAsyncGetFactorListRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::Result>* AsyncFactorBindingRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::Result>* PrepareAsyncFactorBindingRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* AsyncGetTemporaryAuthCodeRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* PrepareAsyncGetTemporaryAuthCodeRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* AsyncAuthenticateRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* PrepareAsyncAuthenticateRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SessionResponse>* AsyncCreateSessionRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SessionResponse>* PrepareAsyncCreateSessionRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* AsyncSetUserCredentialRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* PrepareAsyncSetUserCredentialRaw(::grpc::ClientContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserApplications_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSubscriptionChannel_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFactorList_;
    const ::grpc::internal::RpcMethod rpcmethod_FactorBinding_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTemporaryAuthCode_;
    const ::grpc::internal::RpcMethod rpcmethod_Authenticate_;
    const ::grpc::internal::RpcMethod rpcmethod_ChangePassword_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSession_;
    const ::grpc::internal::RpcMethod rpcmethod_SetUserCredential_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetUserApplications(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response);
    // список приложений закрепленных за пользователем
    virtual ::grpc::Status CreateSubscriptionChannel(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage>* stream);
    // подписка на серверные сообщения
    virtual ::grpc::Status GetFactorList(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response);
    // список факторов пользователя
    virtual ::grpc::Status FactorBinding(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* request, ::Avanpost::Sso::Agent::Grpc::Result* response);
    // опреции с фактором аутентификации
    virtual ::grpc::Status GetTemporaryAuthCode(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response);
    virtual ::grpc::Status Authenticate(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response);
    virtual ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response);
    virtual ::grpc::Status CreateSession(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response);
    virtual ::grpc::Status SetUserCredential(::grpc::ServerContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserApplications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserApplications() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetUserApplications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserApplications(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserApplications(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSubscriptionChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSubscriptionChannel() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateSubscriptionChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSubscriptionChannel(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSubscriptionChannel(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(1, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFactorList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFactorList() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetFactorList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFactorList(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFactorList(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::FactorListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FactorBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FactorBinding() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_FactorBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FactorBinding(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::Result* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFactorBinding(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTemporaryAuthCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTemporaryAuthCode() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetTemporaryAuthCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTemporaryAuthCode(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTemporaryAuthCode(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Authenticate() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticate(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ChangePassword() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSession() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CreateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSession(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSession(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::SessionRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::SessionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetUserCredential : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetUserCredential() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SetUserCredential() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUserCredential(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetUserCredential(::grpc::ServerContext* context, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* request, ::grpc::ServerAsyncResponseWriter< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetUserApplications<WithAsyncMethod_CreateSubscriptionChannel<WithAsyncMethod_GetFactorList<WithAsyncMethod_FactorBinding<WithAsyncMethod_GetTemporaryAuthCode<WithAsyncMethod_Authenticate<WithAsyncMethod_ChangePassword<WithAsyncMethod_CreateSession<WithAsyncMethod_SetUserCredential<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetUserApplications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserApplications() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* response) { return this->GetUserApplications(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserApplications(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserApplications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserApplications(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserApplications(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSubscriptionChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSubscriptionChannel() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackBidiHandler< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->CreateSubscriptionChannel(context); }));
    }
    ~WithCallbackMethod_CreateSubscriptionChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSubscriptionChannel(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage>* CreateSubscriptionChannel(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFactorList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFactorList() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::FactorListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::UserRequest* request, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* response) { return this->GetFactorList(context, request, response); }));}
    void SetMessageAllocatorFor_GetFactorList(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::FactorListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::FactorListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFactorList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFactorList(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFactorList(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FactorBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FactorBinding() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, ::Avanpost::Sso::Agent::Grpc::Result>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* request, ::Avanpost::Sso::Agent::Grpc::Result* response) { return this->FactorBinding(context, request, response); }));}
    void SetMessageAllocatorFor_FactorBinding(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, ::Avanpost::Sso::Agent::Grpc::Result>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, ::Avanpost::Sso::Agent::Grpc::Result>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FactorBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FactorBinding(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::Result* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FactorBinding(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::Result* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTemporaryAuthCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTemporaryAuthCode() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* request, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* response) { return this->GetTemporaryAuthCode(context, request, response); }));}
    void SetMessageAllocatorFor_GetTemporaryAuthCode(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTemporaryAuthCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTemporaryAuthCode(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTemporaryAuthCode(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Authenticate() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* request, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* response) { return this->Authenticate(context, request, response); }));}
    void SetMessageAllocatorFor_Authenticate(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Authenticate(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* request, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* response) { return this->ChangePassword(context, request, response); }));}
    void SetMessageAllocatorFor_ChangePassword(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSession() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::SessionRequest, ::Avanpost::Sso::Agent::Grpc::SessionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* request, ::Avanpost::Sso::Agent::Grpc::SessionResponse* response) { return this->CreateSession(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSession(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::SessionRequest, ::Avanpost::Sso::Agent::Grpc::SessionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::SessionRequest, ::Avanpost::Sso::Agent::Grpc::SessionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSession(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSession(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SessionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetUserCredential : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetUserCredential() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* request, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* response) { return this->SetUserCredential(context, request, response); }));}
    void SetMessageAllocatorFor_SetUserCredential(
        ::grpc::MessageAllocator< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetUserCredential() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUserCredential(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetUserCredential(
      ::grpc::CallbackServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetUserApplications<WithCallbackMethod_CreateSubscriptionChannel<WithCallbackMethod_GetFactorList<WithCallbackMethod_FactorBinding<WithCallbackMethod_GetTemporaryAuthCode<WithCallbackMethod_Authenticate<WithCallbackMethod_ChangePassword<WithCallbackMethod_CreateSession<WithCallbackMethod_SetUserCredential<Service > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetUserApplications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserApplications() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetUserApplications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserApplications(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSubscriptionChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSubscriptionChannel() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateSubscriptionChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSubscriptionChannel(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFactorList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFactorList() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetFactorList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFactorList(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FactorBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FactorBinding() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_FactorBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FactorBinding(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::Result* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTemporaryAuthCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTemporaryAuthCode() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetTemporaryAuthCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTemporaryAuthCode(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Authenticate() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ChangePassword() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSession() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CreateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSession(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetUserCredential : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetUserCredential() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SetUserCredential() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUserCredential(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserApplications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserApplications() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetUserApplications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserApplications(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserApplications(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSubscriptionChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSubscriptionChannel() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateSubscriptionChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSubscriptionChannel(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSubscriptionChannel(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(1, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFactorList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFactorList() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetFactorList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFactorList(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFactorList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FactorBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FactorBinding() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_FactorBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FactorBinding(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::Result* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFactorBinding(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTemporaryAuthCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTemporaryAuthCode() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetTemporaryAuthCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTemporaryAuthCode(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTemporaryAuthCode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Authenticate() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSession() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CreateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSession(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSession(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetUserCredential : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetUserCredential() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SetUserCredential() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUserCredential(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetUserCredential(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserApplications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserApplications() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserApplications(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserApplications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserApplications(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserApplications(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSubscriptionChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSubscriptionChannel() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->CreateSubscriptionChannel(context); }));
    }
    ~WithRawCallbackMethod_CreateSubscriptionChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSubscriptionChannel(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* CreateSubscriptionChannel(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFactorList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFactorList() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFactorList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFactorList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFactorList(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFactorList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FactorBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FactorBinding() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FactorBinding(context, request, response); }));
    }
    ~WithRawCallbackMethod_FactorBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FactorBinding(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::Result* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FactorBinding(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTemporaryAuthCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTemporaryAuthCode() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTemporaryAuthCode(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTemporaryAuthCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTemporaryAuthCode(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTemporaryAuthCode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Authenticate() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Authenticate(context, request, response); }));
    }
    ~WithRawCallbackMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Authenticate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ChangePassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSession() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSession(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSession(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSession(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetUserCredential : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetUserCredential() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetUserCredential(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetUserCredential() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUserCredential(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetUserCredential(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserApplications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserApplications() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* streamer) {
                       return this->StreamedGetUserApplications(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserApplications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserApplications(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserApplications(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::UserRequest,::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFactorList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFactorList() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::FactorListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::UserRequest, ::Avanpost::Sso::Agent::Grpc::FactorListResponse>* streamer) {
                       return this->StreamedGetFactorList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFactorList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFactorList(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::UserRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::FactorListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFactorList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::UserRequest,::Avanpost::Sso::Agent::Grpc::FactorListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FactorBinding : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FactorBinding() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, ::Avanpost::Sso::Agent::Grpc::Result>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, ::Avanpost::Sso::Agent::Grpc::Result>* streamer) {
                       return this->StreamedFactorBinding(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FactorBinding() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FactorBinding(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::Result* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFactorBinding(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest,::Avanpost::Sso::Agent::Grpc::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTemporaryAuthCode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTemporaryAuthCode() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* streamer) {
                       return this->StreamedGetTemporaryAuthCode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTemporaryAuthCode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTemporaryAuthCode(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTemporaryAuthCode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest,::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Authenticate() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* streamer) {
                       return this->StreamedAuthenticate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAuthenticate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest,::Avanpost::Sso::Agent::Grpc::AuthenticationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ChangePassword() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* streamer) {
                       return this->StreamedChangePassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangePassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest,::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSession() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::SessionRequest, ::Avanpost::Sso::Agent::Grpc::SessionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::SessionRequest, ::Avanpost::Sso::Agent::Grpc::SessionResponse>* streamer) {
                       return this->StreamedCreateSession(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSession(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SessionRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSession(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::SessionRequest,::Avanpost::Sso::Agent::Grpc::SessionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetUserCredential : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetUserCredential() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* streamer) {
                       return this->StreamedSetUserCredential(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetUserCredential() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetUserCredential(::grpc::ServerContext* /*context*/, const ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* /*request*/, ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetUserCredential(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest,::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetUserApplications<WithStreamedUnaryMethod_GetFactorList<WithStreamedUnaryMethod_FactorBinding<WithStreamedUnaryMethod_GetTemporaryAuthCode<WithStreamedUnaryMethod_Authenticate<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_CreateSession<WithStreamedUnaryMethod_SetUserCredential<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetUserApplications<WithStreamedUnaryMethod_GetFactorList<WithStreamedUnaryMethod_FactorBinding<WithStreamedUnaryMethod_GetTemporaryAuthCode<WithStreamedUnaryMethod_Authenticate<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_CreateSession<WithStreamedUnaryMethod_SetUserCredential<Service > > > > > > > > StreamedService;
};

}  // namespace Grpc
}  // namespace Agent
}  // namespace Sso
}  // namespace Avanpost


#endif  // GRPC_agentcontrol_2eproto__INCLUDED

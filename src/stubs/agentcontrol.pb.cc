// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agentcontrol.proto

#include "agentcontrol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Avanpost {
namespace Sso {
namespace Agent {
namespace Grpc {
constexpr Result::Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : errortext_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , iserror_(false){}
struct ResultDefaultTypeInternal {
  constexpr ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResultDefaultTypeInternal() {}
  union {
    Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResultDefaultTypeInternal _Result_default_instance_;
constexpr UserRequest::UserRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UserRequestDefaultTypeInternal {
  constexpr UserRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UserRequestDefaultTypeInternal() {}
  union {
    UserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserRequestDefaultTypeInternal _UserRequest_default_instance_;
constexpr TemporaryAuthCodeRequest::TemporaryAuthCodeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , applicationname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct TemporaryAuthCodeRequestDefaultTypeInternal {
  constexpr TemporaryAuthCodeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TemporaryAuthCodeRequestDefaultTypeInternal() {}
  union {
    TemporaryAuthCodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TemporaryAuthCodeRequestDefaultTypeInternal _TemporaryAuthCodeRequest_default_instance_;
constexpr TemporaryAuthCodeResponse::TemporaryAuthCodeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : temporarycode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr){}
struct TemporaryAuthCodeResponseDefaultTypeInternal {
  constexpr TemporaryAuthCodeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TemporaryAuthCodeResponseDefaultTypeInternal() {}
  union {
    TemporaryAuthCodeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TemporaryAuthCodeResponseDefaultTypeInternal _TemporaryAuthCodeResponse_default_instance_;
constexpr UserApplicationsResponse::UserApplicationsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applications_()
  , result_(nullptr){}
struct UserApplicationsResponseDefaultTypeInternal {
  constexpr UserApplicationsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UserApplicationsResponseDefaultTypeInternal() {}
  union {
    UserApplicationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserApplicationsResponseDefaultTypeInternal _UserApplicationsResponse_default_instance_;
constexpr Application::Application(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , applicationname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , commands_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , passwordpolicy_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , allowusermanagecredentials_(false)
  , serverpasswordgeneration_(false){}
struct ApplicationDefaultTypeInternal {
  constexpr ApplicationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ApplicationDefaultTypeInternal() {}
  union {
    Application _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ApplicationDefaultTypeInternal _Application_default_instance_;
constexpr UserCredentials::UserCredentials(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , user_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , comment_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , credentialsid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UserCredentialsDefaultTypeInternal {
  constexpr UserCredentialsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UserCredentialsDefaultTypeInternal() {}
  union {
    UserCredentials _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserCredentialsDefaultTypeInternal _UserCredentials_default_instance_;
constexpr AgentChannelMessage::AgentChannelMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , authenticationfactor_(nullptr){}
struct AgentChannelMessageDefaultTypeInternal {
  constexpr AgentChannelMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentChannelMessageDefaultTypeInternal() {}
  union {
    AgentChannelMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentChannelMessageDefaultTypeInternal _AgentChannelMessage_default_instance_;
constexpr AuthenticationFactor_MetadataEntry_DoNotUse::AuthenticationFactor_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AuthenticationFactor_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr AuthenticationFactor_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticationFactor_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AuthenticationFactor_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticationFactor_MetadataEntry_DoNotUseDefaultTypeInternal _AuthenticationFactor_MetadataEntry_DoNotUse_default_instance_;
constexpr AuthenticationFactor::AuthenticationFactor(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , factor_(0)
{}
struct AuthenticationFactorDefaultTypeInternal {
  constexpr AuthenticationFactorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticationFactorDefaultTypeInternal() {}
  union {
    AuthenticationFactor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticationFactorDefaultTypeInternal _AuthenticationFactor_default_instance_;
constexpr ServerChannelMessage::ServerChannelMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : authenticationfactor_(nullptr){}
struct ServerChannelMessageDefaultTypeInternal {
  constexpr ServerChannelMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServerChannelMessageDefaultTypeInternal() {}
  union {
    ServerChannelMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServerChannelMessageDefaultTypeInternal _ServerChannelMessage_default_instance_;
constexpr ApplicationFactorRequest::ApplicationFactorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ApplicationFactorRequestDefaultTypeInternal {
  constexpr ApplicationFactorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ApplicationFactorRequestDefaultTypeInternal() {}
  union {
    ApplicationFactorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ApplicationFactorRequestDefaultTypeInternal _ApplicationFactorRequest_default_instance_;
constexpr FactorListResponse::FactorListResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : factors_()
  , result_(nullptr){}
struct FactorListResponseDefaultTypeInternal {
  constexpr FactorListResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FactorListResponseDefaultTypeInternal() {}
  union {
    FactorListResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FactorListResponseDefaultTypeInternal _FactorListResponse_default_instance_;
constexpr FactorBindingRequest::FactorBindingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , authenticationfactor_(nullptr)
  , operation_(0)
{}
struct FactorBindingRequestDefaultTypeInternal {
  constexpr FactorBindingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FactorBindingRequestDefaultTypeInternal() {}
  union {
    FactorBindingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FactorBindingRequestDefaultTypeInternal _FactorBindingRequest_default_instance_;
constexpr AuthenticationRequest_MetadataEntry_DoNotUse::AuthenticationRequest_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AuthenticationRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr AuthenticationRequest_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticationRequest_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AuthenticationRequest_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _AuthenticationRequest_MetadataEntry_DoNotUse_default_instance_;
constexpr AuthenticationRequest::AuthenticationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , passcode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , factor_(0)
{}
struct AuthenticationRequestDefaultTypeInternal {
  constexpr AuthenticationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticationRequestDefaultTypeInternal() {}
  union {
    AuthenticationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticationRequestDefaultTypeInternal _AuthenticationRequest_default_instance_;
constexpr AuthenticationResponse_MetadataEntry_DoNotUse::AuthenticationResponse_MetadataEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AuthenticationResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
  constexpr AuthenticationResponse_MetadataEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticationResponse_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AuthenticationResponse_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticationResponse_MetadataEntry_DoNotUseDefaultTypeInternal _AuthenticationResponse_MetadataEntry_DoNotUse_default_instance_;
constexpr AuthenticationResponse::AuthenticationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : factors_()
  , _factors_cached_byte_size_(0)
  , metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , credentials_()
  , state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0)

  , remainingattemptscount_(0){}
struct AuthenticationResponseDefaultTypeInternal {
  constexpr AuthenticationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticationResponseDefaultTypeInternal() {}
  union {
    AuthenticationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticationResponseDefaultTypeInternal _AuthenticationResponse_default_instance_;
constexpr ChangePasswordRequest::ChangePasswordRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , oldpassword_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , newpassword_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ChangePasswordRequestDefaultTypeInternal {
  constexpr ChangePasswordRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChangePasswordRequestDefaultTypeInternal() {}
  union {
    ChangePasswordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChangePasswordRequestDefaultTypeInternal _ChangePasswordRequest_default_instance_;
constexpr ChangePasswordResponse::ChangePasswordResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0)
{}
struct ChangePasswordResponseDefaultTypeInternal {
  constexpr ChangePasswordResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChangePasswordResponseDefaultTypeInternal() {}
  union {
    ChangePasswordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChangePasswordResponseDefaultTypeInternal _ChangePasswordResponse_default_instance_;
constexpr SessionRequest::SessionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , handledfactor_(0)
{}
struct SessionRequestDefaultTypeInternal {
  constexpr SessionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SessionRequestDefaultTypeInternal() {}
  union {
    SessionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SessionRequestDefaultTypeInternal _SessionRequest_default_instance_;
constexpr SessionResponse::SessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr){}
struct SessionResponseDefaultTypeInternal {
  constexpr SessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SessionResponseDefaultTypeInternal() {}
  union {
    SessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SessionResponseDefaultTypeInternal _SessionResponse_default_instance_;
constexpr SetUserCredentialRequest::SetUserCredentialRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applicationid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , credentialid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , comment_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(nullptr){}
struct SetUserCredentialRequestDefaultTypeInternal {
  constexpr SetUserCredentialRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetUserCredentialRequestDefaultTypeInternal() {}
  union {
    SetUserCredentialRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetUserCredentialRequestDefaultTypeInternal _SetUserCredentialRequest_default_instance_;
constexpr PasswordInfo::PasswordInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : password_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , passwordconfirm_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PasswordInfoDefaultTypeInternal {
  constexpr PasswordInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PasswordInfoDefaultTypeInternal() {}
  union {
    PasswordInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PasswordInfoDefaultTypeInternal _PasswordInfo_default_instance_;
constexpr SetUserCredentialResponse::SetUserCredentialResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : errortext_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , password_(nullptr)
  , status_(0)
{}
struct SetUserCredentialResponseDefaultTypeInternal {
  constexpr SetUserCredentialResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetUserCredentialResponseDefaultTypeInternal() {}
  union {
    SetUserCredentialResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetUserCredentialResponseDefaultTypeInternal _SetUserCredentialResponse_default_instance_;
}  // namespace Grpc
}  // namespace Agent
}  // namespace Sso
}  // namespace Avanpost
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_agentcontrol_2eproto[25];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_agentcontrol_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_agentcontrol_2eproto = nullptr;

const uint32_t TableStruct_agentcontrol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Result, iserror_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Result, errortext_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserRequest, username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest, applicationname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse, temporarycode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse, result_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse, applications_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Application, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Application, applicationid_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Application, applicationname_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Application, commands_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Application, allowusermanagecredentials_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Application, serverpasswordgeneration_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::Application, passwordpolicy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserCredentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserCredentials, applicationid_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserCredentials, user_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserCredentials, password_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserCredentials, domain_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserCredentials, comment_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::UserCredentials, credentialsid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, result_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AgentChannelMessage, authenticationfactor_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor, factor_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ServerChannelMessage, authenticationfactor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ApplicationFactorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ApplicationFactorRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ApplicationFactorRequest, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::FactorListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::FactorListResponse, result_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::FactorListResponse, factors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, authenticationfactor_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::FactorBindingRequest, operation_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, passcode_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, state_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, sessionid_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, applicationid_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, factor_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, status_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, factors_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, state_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, sessionid_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, token_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, credentials_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse, remainingattemptscount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, oldpassword_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest, newpassword_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse, status_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SessionRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SessionRequest, handledfactor_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SessionRequest, applicationid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SessionResponse, result_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SessionResponse, sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, applicationid_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, credentialid_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, username_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, password_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest, comment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::PasswordInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::PasswordInfo, password_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::PasswordInfo, passwordconfirm_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse, status_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse, password_),
  PROTOBUF_FIELD_OFFSET(::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse, errortext_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::Result)},
  { 8, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::UserRequest)},
  { 15, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest)},
  { 23, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse)},
  { 31, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse)},
  { 39, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::Application)},
  { 51, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::UserCredentials)},
  { 63, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::AgentChannelMessage)},
  { 72, 80, -1, sizeof(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse)},
  { 82, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::AuthenticationFactor)},
  { 90, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::ServerChannelMessage)},
  { 97, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::ApplicationFactorRequest)},
  { 105, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::FactorListResponse)},
  { 113, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::FactorBindingRequest)},
  { 122, 130, -1, sizeof(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse)},
  { 132, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::AuthenticationRequest)},
  { 145, 153, -1, sizeof(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse)},
  { 155, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::AuthenticationResponse)},
  { 169, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest)},
  { 178, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse)},
  { 186, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::SessionRequest)},
  { 195, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::SessionResponse)},
  { 203, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest)},
  { 215, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::PasswordInfo)},
  { 223, -1, -1, sizeof(::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_UserRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_TemporaryAuthCodeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_TemporaryAuthCodeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_UserApplicationsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_Application_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_UserCredentials_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_AgentChannelMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_AuthenticationFactor_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_AuthenticationFactor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_ServerChannelMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_ApplicationFactorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_FactorListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_FactorBindingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_AuthenticationRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_AuthenticationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_AuthenticationResponse_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_AuthenticationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_ChangePasswordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_ChangePasswordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_SessionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_SessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_SetUserCredentialRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_PasswordInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Avanpost::Sso::Agent::Grpc::_SetUserCredentialResponse_default_instance_),
};

const char descriptor_table_protodef_agentcontrol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022agentcontrol.proto\022\027Avanpost.Sso.Agent"
  ".Grpc\",\n\006Result\022\017\n\007isError\030\001 \001(\010\022\021\n\terro"
  "rText\030\002 \001(\t\"\037\n\013UserRequest\022\020\n\010username\030\001"
  " \001(\t\"E\n\030TemporaryAuthCodeRequest\022\020\n\010user"
  "name\030\001 \001(\t\022\027\n\017applicationName\030\002 \001(\t\"c\n\031T"
  "emporaryAuthCodeResponse\022/\n\006result\030\001 \001(\013"
  "2\037.Avanpost.Sso.Agent.Grpc.Result\022\025\n\rtem"
  "poraryCode\030\002 \001(\t\"\207\001\n\030UserApplicationsRes"
  "ponse\022/\n\006result\030\001 \001(\0132\037.Avanpost.Sso.Age"
  "nt.Grpc.Result\022:\n\014applications\030\002 \003(\0132$.A"
  "vanpost.Sso.Agent.Grpc.Application\"\255\001\n\013A"
  "pplication\022\025\n\rapplicationID\030\001 \001(\t\022\027\n\017app"
  "licationName\030\002 \001(\t\022\020\n\010commands\030\003 \001(\t\022\"\n\032"
  "allowUserManageCredentials\030\004 \001(\010\022 \n\030serv"
  "erPasswordGeneration\030\005 \001(\010\022\026\n\016passwordPo"
  "licy\030\006 \001(\t\"\200\001\n\017UserCredentials\022\025\n\rapplic"
  "ationID\030\001 \001(\t\022\014\n\004user\030\002 \001(\t\022\020\n\010password\030"
  "\003 \001(\t\022\016\n\006domain\030\004 \001(\t\022\017\n\007comment\030\005 \001(\t\022\025"
  "\n\rcredentialsID\030\006 \001(\t\"\245\001\n\023AgentChannelMe"
  "ssage\022/\n\006result\030\001 \001(\0132\037.Avanpost.Sso.Age"
  "nt.Grpc.Result\022\020\n\010username\030\002 \001(\t\022K\n\024auth"
  "enticationFactor\030\003 \001(\0132-.Avanpost.Sso.Ag"
  "ent.Grpc.AuthenticationFactor\"\313\001\n\024Authen"
  "ticationFactor\0223\n\006factor\030\001 \001(\0162#.Avanpos"
  "t.Sso.Agent.Grpc.FactorType\022M\n\010metadata\030"
  "\002 \003(\0132;.Avanpost.Sso.Agent.Grpc.Authenti"
  "cationFactor.MetadataEntry\032/\n\rMetadataEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"c\n\024S"
  "erverChannelMessage\022K\n\024authenticationFac"
  "tor\030\001 \001(\0132-.Avanpost.Sso.Agent.Grpc.Auth"
  "enticationFactor\"C\n\030ApplicationFactorReq"
  "uest\022\020\n\010username\030\001 \001(\t\022\025\n\rapplicationID\030"
  "\002 \001(\t\"\205\001\n\022FactorListResponse\022/\n\006result\030\001"
  " \001(\0132\037.Avanpost.Sso.Agent.Grpc.Result\022>\n"
  "\007factors\030\002 \003(\0132-.Avanpost.Sso.Agent.Grpc"
  ".AuthenticationFactor\"\263\001\n\024FactorBindingR"
  "equest\022\020\n\010username\030\001 \001(\t\022K\n\024authenticati"
  "onFactor\030\002 \001(\0132-.Avanpost.Sso.Agent.Grpc"
  ".AuthenticationFactor\022<\n\toperation\030\003 \001(\016"
  "2).Avanpost.Sso.Agent.Grpc.BindingOperat"
  "ion\"\252\002\n\025AuthenticationRequest\022\020\n\010usernam"
  "e\030\001 \001(\t\022\020\n\010passcode\030\002 \001(\t\022\r\n\005state\030\003 \001(\t"
  "\022\021\n\tsessionID\030\004 \001(\t\022\025\n\rapplicationID\030\005 \001"
  "(\t\0223\n\006factor\030\006 \001(\0162#.Avanpost.Sso.Agent."
  "Grpc.FactorType\022N\n\010metadata\030\007 \003(\0132<.Avan"
  "post.Sso.Agent.Grpc.AuthenticationReques"
  "t.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\237\003\n\026Authenticat"
  "ionResponse\022=\n\006status\030\001 \001(\0162-.Avanpost.S"
  "so.Agent.Grpc.AuthenticationStatus\0224\n\007fa"
  "ctors\030\002 \003(\0162#.Avanpost.Sso.Agent.Grpc.Fa"
  "ctorType\022\r\n\005state\030\003 \001(\t\022\021\n\tsessionID\030\005 \001"
  "(\t\022\r\n\005token\030\006 \001(\t\022O\n\010metadata\030\007 \003(\0132=.Av"
  "anpost.Sso.Agent.Grpc.AuthenticationResp"
  "onse.MetadataEntry\022=\n\013credentials\030\010 \003(\0132"
  "(.Avanpost.Sso.Agent.Grpc.UserCredential"
  "s\022\036\n\026remainingAttemptsCount\030\t \001(\005\032/\n\rMet"
  "adataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
  "8\001\"S\n\025ChangePasswordRequest\022\020\n\010username\030"
  "\001 \001(\t\022\023\n\013oldPassword\030\002 \001(\t\022\023\n\013newPasswor"
  "d\030\003 \001(\t\"h\n\026ChangePasswordResponse\022=\n\006sta"
  "tus\030\001 \001(\0162-.Avanpost.Sso.Agent.Grpc.Chan"
  "gePasswordStatus\022\017\n\007message\030\002 \001(\t\"u\n\016Ses"
  "sionRequest\022\020\n\010username\030\001 \001(\t\022:\n\rhandled"
  "Factor\030\002 \001(\0162#.Avanpost.Sso.Agent.Grpc.F"
  "actorType\022\025\n\rapplicationID\030\003 \001(\t\"U\n\017Sess"
  "ionResponse\022/\n\006result\030\001 \001(\0132\037.Avanpost.S"
  "so.Agent.Grpc.Result\022\021\n\tsessionID\030\002 \001(\t\""
  "\263\001\n\030SetUserCredentialRequest\022\025\n\rapplicat"
  "ionID\030\001 \001(\t\022\024\n\014credentialID\030\002 \001(\t\022\020\n\010use"
  "rname\030\003 \001(\t\0227\n\010password\030\004 \001(\0132%.Avanpost"
  ".Sso.Agent.Grpc.PasswordInfo\022\016\n\006domain\030\005"
  " \001(\t\022\017\n\007comment\030\006 \001(\t\"9\n\014PasswordInfo\022\020\n"
  "\010password\030\001 \001(\t\022\027\n\017passwordConfirm\030\002 \001(\t"
  "\"\251\001\n\031SetUserCredentialResponse\022@\n\006status"
  "\030\001 \001(\01620.Avanpost.Sso.Agent.Grpc.SetUser"
  "CredentialStatus\0227\n\010password\030\002 \001(\0132%.Ava"
  "npost.Sso.Agent.Grpc.PasswordInfo\022\021\n\terr"
  "orText\030\003 \001(\t*~\n\nFactorType\022\t\n\005EMPTY\020\000\022\014\n"
  "\010PASSWORD\020\001\022\010\n\004TOTP\020\002\022\007\n\003SMS\020\003\022\014\n\010KERBER"
  "OS\020\004\022\r\n\tSMARTCARD\020\005\022\t\n\005EMAIL\020\006\022\014\n\010TELEGR"
  "AM\020\007\022\016\n\nPAYCONTROL\020\010*3\n\020BindingOperation"
  "\022\007\n\003ADD\020\000\022\n\n\006UPDATE\020\001\022\n\n\006REMOVE\020\002*w\n\024Aut"
  "henticationStatus\022\020\n\014AccessReject\020\000\022\020\n\014A"
  "ccessAccept\020\001\022\023\n\017AccessChallenge\020\002\022\021\n\rAc"
  "countLocked\020\003\022\023\n\017PasswordExpired\020\004*>\n\024Ch"
  "angePasswordStatus\022\022\n\016PasswordAccept\020\000\022\022"
  "\n\016PasswordReject\020\001*N\n\027SetUserCredentialS"
  "tatus\022\n\n\006Accept\020\000\022\n\n\006Reject\020\001\022\033\n\027UserMus"
  "tProvidePassword\020\0022\204\010\n\014AgentControl\022n\n\023G"
  "etUserApplications\022$.Avanpost.Sso.Agent."
  "Grpc.UserRequest\0321.Avanpost.Sso.Agent.Gr"
  "pc.UserApplicationsResponse\022|\n\031CreateSub"
  "scriptionChannel\022,.Avanpost.Sso.Agent.Gr"
  "pc.AgentChannelMessage\032-.Avanpost.Sso.Ag"
  "ent.Grpc.ServerChannelMessage(\0010\001\022b\n\rGet"
  "FactorList\022$.Avanpost.Sso.Agent.Grpc.Use"
  "rRequest\032+.Avanpost.Sso.Agent.Grpc.Facto"
  "rListResponse\022_\n\rFactorBinding\022-.Avanpos"
  "t.Sso.Agent.Grpc.FactorBindingRequest\032\037."
  "Avanpost.Sso.Agent.Grpc.Result\022}\n\024GetTem"
  "poraryAuthCode\0221.Avanpost.Sso.Agent.Grpc"
  ".TemporaryAuthCodeRequest\0322.Avanpost.Sso"
  ".Agent.Grpc.TemporaryAuthCodeResponse\022o\n"
  "\014Authenticate\022..Avanpost.Sso.Agent.Grpc."
  "AuthenticationRequest\032/.Avanpost.Sso.Age"
  "nt.Grpc.AuthenticationResponse\022q\n\016Change"
  "Password\022..Avanpost.Sso.Agent.Grpc.Chang"
  "ePasswordRequest\032/.Avanpost.Sso.Agent.Gr"
  "pc.ChangePasswordResponse\022b\n\rCreateSessi"
  "on\022\'.Avanpost.Sso.Agent.Grpc.SessionRequ"
  "est\032(.Avanpost.Sso.Agent.Grpc.SessionRes"
  "ponse\022z\n\021SetUserCredential\0221.Avanpost.Ss"
  "o.Agent.Grpc.SetUserCredentialRequest\0322."
  "Avanpost.Sso.Agent.Grpc.SetUserCredentia"
  "lResponseB\020P\001Z\014agentcontrolb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_agentcontrol_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_agentcontrol_2eproto = {
  false, false, 4635, descriptor_table_protodef_agentcontrol_2eproto, "agentcontrol.proto", 
  &descriptor_table_agentcontrol_2eproto_once, nullptr, 0, 25,
  schemas, file_default_instances, TableStruct_agentcontrol_2eproto::offsets,
  file_level_metadata_agentcontrol_2eproto, file_level_enum_descriptors_agentcontrol_2eproto, file_level_service_descriptors_agentcontrol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_agentcontrol_2eproto_getter() {
  return &descriptor_table_agentcontrol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_agentcontrol_2eproto(&descriptor_table_agentcontrol_2eproto);
namespace Avanpost {
namespace Sso {
namespace Agent {
namespace Grpc {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FactorType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agentcontrol_2eproto);
  return file_level_enum_descriptors_agentcontrol_2eproto[0];
}
bool FactorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BindingOperation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agentcontrol_2eproto);
  return file_level_enum_descriptors_agentcontrol_2eproto[1];
}
bool BindingOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AuthenticationStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agentcontrol_2eproto);
  return file_level_enum_descriptors_agentcontrol_2eproto[2];
}
bool AuthenticationStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChangePasswordStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agentcontrol_2eproto);
  return file_level_enum_descriptors_agentcontrol_2eproto[3];
}
bool ChangePasswordStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetUserCredentialStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agentcontrol_2eproto);
  return file_level_enum_descriptors_agentcontrol_2eproto[4];
}
bool SetUserCredentialStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Result::_Internal {
 public:
};

Result::Result(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.Result)
}
Result::Result(const Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errortext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    errortext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errortext().empty()) {
    errortext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errortext(), 
      GetArenaForAllocation());
  }
  iserror_ = from.iserror_;
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.Result)
}

inline void Result::SharedCtor() {
errortext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  errortext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
iserror_ = false;
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.Result)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Result::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  errortext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Result::ArenaDtor(void* object) {
  Result* _this = reinterpret_cast< Result* >(object);
  (void)_this;
}
void Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.Result)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errortext_.ClearToEmpty();
  iserror_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isError = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          iserror_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string errorText = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errortext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.Result.errorText"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Result::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.Result)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isError = 1;
  if (this->_internal_iserror() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_iserror(), target);
  }

  // string errorText = 2;
  if (!this->_internal_errortext().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errortext().data(), static_cast<int>(this->_internal_errortext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.Result.errorText");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_errortext(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.Result)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorText = 2;
  if (!this->_internal_errortext().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errortext());
  }

  // bool isError = 1;
  if (this->_internal_iserror() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Result::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Result::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Result::GetClassData() const { return &_class_data_; }

void Result::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Result *>(to)->MergeFrom(
      static_cast<const Result &>(from));
}


void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.Result)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errortext().empty()) {
    _internal_set_errortext(from._internal_errortext());
  }
  if (from._internal_iserror() != 0) {
    _internal_set_iserror(from._internal_iserror());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  return true;
}

void Result::InternalSwap(Result* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &errortext_, lhs_arena,
      &other->errortext_, rhs_arena
  );
  swap(iserror_, other->iserror_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Result::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[0]);
}

// ===================================================================

class UserRequest::_Internal {
 public:
};

UserRequest::UserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.UserRequest)
}

inline void UserRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.UserRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserRequest::ArenaDtor(void* object) {
  UserRequest* _this = reinterpret_cast< UserRequest* >(object);
  (void)_this;
}
void UserRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.UserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.UserRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.UserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.UserRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.UserRequest)
  return target;
}

size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.UserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserRequest::GetClassData() const { return &_class_data_; }

void UserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UserRequest *>(to)->MergeFrom(
      static_cast<const UserRequest &>(from));
}


void UserRequest::MergeFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::InternalSwap(UserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UserRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[1]);
}

// ===================================================================

class TemporaryAuthCodeRequest::_Internal {
 public:
};

TemporaryAuthCodeRequest::TemporaryAuthCodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
}
TemporaryAuthCodeRequest::TemporaryAuthCodeRequest(const TemporaryAuthCodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  applicationname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationname().empty()) {
    applicationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationname(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
}

inline void TemporaryAuthCodeRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
applicationname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TemporaryAuthCodeRequest::~TemporaryAuthCodeRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TemporaryAuthCodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TemporaryAuthCodeRequest::ArenaDtor(void* object) {
  TemporaryAuthCodeRequest* _this = reinterpret_cast< TemporaryAuthCodeRequest* >(object);
  (void)_this;
}
void TemporaryAuthCodeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TemporaryAuthCodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TemporaryAuthCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  applicationname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TemporaryAuthCodeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string applicationName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_applicationname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest.applicationName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TemporaryAuthCodeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string applicationName = 2;
  if (!this->_internal_applicationname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationname().data(), static_cast<int>(this->_internal_applicationname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest.applicationName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
  return target;
}

size_t TemporaryAuthCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string applicationName = 2;
  if (!this->_internal_applicationname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TemporaryAuthCodeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TemporaryAuthCodeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TemporaryAuthCodeRequest::GetClassData() const { return &_class_data_; }

void TemporaryAuthCodeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TemporaryAuthCodeRequest *>(to)->MergeFrom(
      static_cast<const TemporaryAuthCodeRequest &>(from));
}


void TemporaryAuthCodeRequest::MergeFrom(const TemporaryAuthCodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_applicationname().empty()) {
    _internal_set_applicationname(from._internal_applicationname());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TemporaryAuthCodeRequest::CopyFrom(const TemporaryAuthCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemporaryAuthCodeRequest::IsInitialized() const {
  return true;
}

void TemporaryAuthCodeRequest::InternalSwap(TemporaryAuthCodeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationname_, lhs_arena,
      &other->applicationname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TemporaryAuthCodeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[2]);
}

// ===================================================================

class TemporaryAuthCodeResponse::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::Result& result(const TemporaryAuthCodeResponse* msg);
};

const ::Avanpost::Sso::Agent::Grpc::Result&
TemporaryAuthCodeResponse::_Internal::result(const TemporaryAuthCodeResponse* msg) {
  return *msg->result_;
}
TemporaryAuthCodeResponse::TemporaryAuthCodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
}
TemporaryAuthCodeResponse::TemporaryAuthCodeResponse(const TemporaryAuthCodeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  temporarycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    temporarycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_temporarycode().empty()) {
    temporarycode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_temporarycode(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    result_ = new ::Avanpost::Sso::Agent::Grpc::Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
}

inline void TemporaryAuthCodeResponse::SharedCtor() {
temporarycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  temporarycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
result_ = nullptr;
}

TemporaryAuthCodeResponse::~TemporaryAuthCodeResponse() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TemporaryAuthCodeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  temporarycode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
}

void TemporaryAuthCodeResponse::ArenaDtor(void* object) {
  TemporaryAuthCodeResponse* _this = reinterpret_cast< TemporaryAuthCodeResponse* >(object);
  (void)_this;
}
void TemporaryAuthCodeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TemporaryAuthCodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TemporaryAuthCodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temporarycode_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TemporaryAuthCodeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string temporaryCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_temporarycode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse.temporaryCode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TemporaryAuthCodeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // string temporaryCode = 2;
  if (!this->_internal_temporarycode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_temporarycode().data(), static_cast<int>(this->_internal_temporarycode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse.temporaryCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_temporarycode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
  return target;
}

size_t TemporaryAuthCodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string temporaryCode = 2;
  if (!this->_internal_temporarycode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_temporarycode());
  }

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TemporaryAuthCodeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TemporaryAuthCodeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TemporaryAuthCodeResponse::GetClassData() const { return &_class_data_; }

void TemporaryAuthCodeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TemporaryAuthCodeResponse *>(to)->MergeFrom(
      static_cast<const TemporaryAuthCodeResponse &>(from));
}


void TemporaryAuthCodeResponse::MergeFrom(const TemporaryAuthCodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_temporarycode().empty()) {
    _internal_set_temporarycode(from._internal_temporarycode());
  }
  if (from._internal_has_result()) {
    _internal_mutable_result()->::Avanpost::Sso::Agent::Grpc::Result::MergeFrom(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TemporaryAuthCodeResponse::CopyFrom(const TemporaryAuthCodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.TemporaryAuthCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemporaryAuthCodeResponse::IsInitialized() const {
  return true;
}

void TemporaryAuthCodeResponse::InternalSwap(TemporaryAuthCodeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &temporarycode_, lhs_arena,
      &other->temporarycode_, rhs_arena
  );
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TemporaryAuthCodeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[3]);
}

// ===================================================================

class UserApplicationsResponse::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::Result& result(const UserApplicationsResponse* msg);
};

const ::Avanpost::Sso::Agent::Grpc::Result&
UserApplicationsResponse::_Internal::result(const UserApplicationsResponse* msg) {
  return *msg->result_;
}
UserApplicationsResponse::UserApplicationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  applications_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
}
UserApplicationsResponse::UserApplicationsResponse(const UserApplicationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      applications_(from.applications_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::Avanpost::Sso::Agent::Grpc::Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
}

inline void UserApplicationsResponse::SharedCtor() {
result_ = nullptr;
}

UserApplicationsResponse::~UserApplicationsResponse() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UserApplicationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void UserApplicationsResponse::ArenaDtor(void* object) {
  UserApplicationsResponse* _this = reinterpret_cast< UserApplicationsResponse* >(object);
  (void)_this;
}
void UserApplicationsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserApplicationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UserApplicationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applications_.Clear();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserApplicationsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Avanpost.Sso.Agent.Grpc.Application applications = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applications(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserApplicationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // repeated .Avanpost.Sso.Agent.Grpc.Application applications = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applications_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_applications(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
  return target;
}

size_t UserApplicationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Avanpost.Sso.Agent.Grpc.Application applications = 2;
  total_size += 1UL * this->_internal_applications_size();
  for (const auto& msg : this->applications_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserApplicationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UserApplicationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserApplicationsResponse::GetClassData() const { return &_class_data_; }

void UserApplicationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UserApplicationsResponse *>(to)->MergeFrom(
      static_cast<const UserApplicationsResponse &>(from));
}


void UserApplicationsResponse::MergeFrom(const UserApplicationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  applications_.MergeFrom(from.applications_);
  if (from._internal_has_result()) {
    _internal_mutable_result()->::Avanpost::Sso::Agent::Grpc::Result::MergeFrom(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserApplicationsResponse::CopyFrom(const UserApplicationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.UserApplicationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserApplicationsResponse::IsInitialized() const {
  return true;
}

void UserApplicationsResponse::InternalSwap(UserApplicationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  applications_.InternalSwap(&other->applications_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserApplicationsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[4]);
}

// ===================================================================

class Application::_Internal {
 public:
};

Application::Application(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.Application)
}
Application::Application(const Application& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArenaForAllocation());
  }
  applicationname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationname().empty()) {
    applicationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationname(), 
      GetArenaForAllocation());
  }
  commands_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    commands_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_commands().empty()) {
    commands_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_commands(), 
      GetArenaForAllocation());
  }
  passwordpolicy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    passwordpolicy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_passwordpolicy().empty()) {
    passwordpolicy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_passwordpolicy(), 
      GetArenaForAllocation());
  }
  ::memcpy(&allowusermanagecredentials_, &from.allowusermanagecredentials_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverpasswordgeneration_) -
    reinterpret_cast<char*>(&allowusermanagecredentials_)) + sizeof(serverpasswordgeneration_));
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.Application)
}

inline void Application::SharedCtor() {
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
applicationname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
commands_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  commands_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
passwordpolicy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  passwordpolicy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&allowusermanagecredentials_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&serverpasswordgeneration_) -
    reinterpret_cast<char*>(&allowusermanagecredentials_)) + sizeof(serverpasswordgeneration_));
}

Application::~Application() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.Application)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Application::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  commands_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  passwordpolicy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Application::ArenaDtor(void* object) {
  Application* _this = reinterpret_cast< Application* >(object);
  (void)_this;
}
void Application::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Application::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Application::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.Application)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty();
  applicationname_.ClearToEmpty();
  commands_.ClearToEmpty();
  passwordpolicy_.ClearToEmpty();
  ::memset(&allowusermanagecredentials_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverpasswordgeneration_) -
      reinterpret_cast<char*>(&allowusermanagecredentials_)) + sizeof(serverpasswordgeneration_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Application::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string applicationID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.Application.applicationID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string applicationName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_applicationname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.Application.applicationName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string commands = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_commands();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.Application.commands"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allowUserManageCredentials = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          allowusermanagecredentials_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool serverPasswordGeneration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          serverpasswordgeneration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string passwordPolicy = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_passwordpolicy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.Application.passwordPolicy"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Application::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.Application)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationID = 1;
  if (!this->_internal_applicationid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.Application.applicationID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string applicationName = 2;
  if (!this->_internal_applicationname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationname().data(), static_cast<int>(this->_internal_applicationname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.Application.applicationName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationname(), target);
  }

  // string commands = 3;
  if (!this->_internal_commands().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_commands().data(), static_cast<int>(this->_internal_commands().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.Application.commands");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_commands(), target);
  }

  // bool allowUserManageCredentials = 4;
  if (this->_internal_allowusermanagecredentials() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_allowusermanagecredentials(), target);
  }

  // bool serverPasswordGeneration = 5;
  if (this->_internal_serverpasswordgeneration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_serverpasswordgeneration(), target);
  }

  // string passwordPolicy = 6;
  if (!this->_internal_passwordpolicy().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_passwordpolicy().data(), static_cast<int>(this->_internal_passwordpolicy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.Application.passwordPolicy");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_passwordpolicy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.Application)
  return target;
}

size_t Application::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.Application)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationID = 1;
  if (!this->_internal_applicationid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string applicationName = 2;
  if (!this->_internal_applicationname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationname());
  }

  // string commands = 3;
  if (!this->_internal_commands().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_commands());
  }

  // string passwordPolicy = 6;
  if (!this->_internal_passwordpolicy().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_passwordpolicy());
  }

  // bool allowUserManageCredentials = 4;
  if (this->_internal_allowusermanagecredentials() != 0) {
    total_size += 1 + 1;
  }

  // bool serverPasswordGeneration = 5;
  if (this->_internal_serverpasswordgeneration() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Application::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Application::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Application::GetClassData() const { return &_class_data_; }

void Application::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Application *>(to)->MergeFrom(
      static_cast<const Application &>(from));
}


void Application::MergeFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.Application)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_applicationid().empty()) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (!from._internal_applicationname().empty()) {
    _internal_set_applicationname(from._internal_applicationname());
  }
  if (!from._internal_commands().empty()) {
    _internal_set_commands(from._internal_commands());
  }
  if (!from._internal_passwordpolicy().empty()) {
    _internal_set_passwordpolicy(from._internal_passwordpolicy());
  }
  if (from._internal_allowusermanagecredentials() != 0) {
    _internal_set_allowusermanagecredentials(from._internal_allowusermanagecredentials());
  }
  if (from._internal_serverpasswordgeneration() != 0) {
    _internal_set_serverpasswordgeneration(from._internal_serverpasswordgeneration());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Application::CopyFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Application::IsInitialized() const {
  return true;
}

void Application::InternalSwap(Application* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationid_, lhs_arena,
      &other->applicationid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationname_, lhs_arena,
      &other->applicationname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &commands_, lhs_arena,
      &other->commands_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &passwordpolicy_, lhs_arena,
      &other->passwordpolicy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Application, serverpasswordgeneration_)
      + sizeof(Application::serverpasswordgeneration_)
      - PROTOBUF_FIELD_OFFSET(Application, allowusermanagecredentials_)>(
          reinterpret_cast<char*>(&allowusermanagecredentials_),
          reinterpret_cast<char*>(&other->allowusermanagecredentials_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Application::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[5]);
}

// ===================================================================

class UserCredentials::_Internal {
 public:
};

UserCredentials::UserCredentials(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.UserCredentials)
}
UserCredentials::UserCredentials(const UserCredentials& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArenaForAllocation());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user().empty()) {
    user_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_user(), 
      GetArenaForAllocation());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    comment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comment().empty()) {
    comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comment(), 
      GetArenaForAllocation());
  }
  credentialsid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    credentialsid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_credentialsid().empty()) {
    credentialsid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_credentialsid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.UserCredentials)
}

inline void UserCredentials::SharedCtor() {
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  comment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
credentialsid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  credentialsid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserCredentials::~UserCredentials() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.UserCredentials)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UserCredentials::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credentialsid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserCredentials::ArenaDtor(void* object) {
  UserCredentials* _this = reinterpret_cast< UserCredentials* >(object);
  (void)_this;
}
void UserCredentials::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UserCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.UserCredentials)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty();
  user_.ClearToEmpty();
  password_.ClearToEmpty();
  domain_.ClearToEmpty();
  comment_.ClearToEmpty();
  credentialsid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserCredentials::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string applicationID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.UserCredentials.applicationID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.UserCredentials.user"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.UserCredentials.password"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string domain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.UserCredentials.domain"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string comment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_comment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.UserCredentials.comment"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string credentialsID = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_credentialsid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.UserCredentials.credentialsID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserCredentials::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.UserCredentials)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationID = 1;
  if (!this->_internal_applicationid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.UserCredentials.applicationID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.UserCredentials.user");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user(), target);
  }

  // string password = 3;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.UserCredentials.password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  // string domain = 4;
  if (!this->_internal_domain().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.UserCredentials.domain");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_domain(), target);
  }

  // string comment = 5;
  if (!this->_internal_comment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comment().data(), static_cast<int>(this->_internal_comment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.UserCredentials.comment");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_comment(), target);
  }

  // string credentialsID = 6;
  if (!this->_internal_credentialsid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_credentialsid().data(), static_cast<int>(this->_internal_credentialsid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.UserCredentials.credentialsID");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_credentialsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.UserCredentials)
  return target;
}

size_t UserCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.UserCredentials)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationID = 1;
  if (!this->_internal_applicationid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 3;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string domain = 4;
  if (!this->_internal_domain().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string comment = 5;
  if (!this->_internal_comment().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comment());
  }

  // string credentialsID = 6;
  if (!this->_internal_credentialsid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_credentialsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserCredentials::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UserCredentials::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserCredentials::GetClassData() const { return &_class_data_; }

void UserCredentials::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UserCredentials *>(to)->MergeFrom(
      static_cast<const UserCredentials &>(from));
}


void UserCredentials::MergeFrom(const UserCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.UserCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_applicationid().empty()) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (!from._internal_user().empty()) {
    _internal_set_user(from._internal_user());
  }
  if (!from._internal_password().empty()) {
    _internal_set_password(from._internal_password());
  }
  if (!from._internal_domain().empty()) {
    _internal_set_domain(from._internal_domain());
  }
  if (!from._internal_comment().empty()) {
    _internal_set_comment(from._internal_comment());
  }
  if (!from._internal_credentialsid().empty()) {
    _internal_set_credentialsid(from._internal_credentialsid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserCredentials::CopyFrom(const UserCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.UserCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserCredentials::IsInitialized() const {
  return true;
}

void UserCredentials::InternalSwap(UserCredentials* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationid_, lhs_arena,
      &other->applicationid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &user_, lhs_arena,
      &other->user_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &domain_, lhs_arena,
      &other->domain_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comment_, lhs_arena,
      &other->comment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &credentialsid_, lhs_arena,
      &other->credentialsid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UserCredentials::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[6]);
}

// ===================================================================

class AgentChannelMessage::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::Result& result(const AgentChannelMessage* msg);
  static const ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor& authenticationfactor(const AgentChannelMessage* msg);
};

const ::Avanpost::Sso::Agent::Grpc::Result&
AgentChannelMessage::_Internal::result(const AgentChannelMessage* msg) {
  return *msg->result_;
}
const ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor&
AgentChannelMessage::_Internal::authenticationfactor(const AgentChannelMessage* msg) {
  return *msg->authenticationfactor_;
}
AgentChannelMessage::AgentChannelMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
}
AgentChannelMessage::AgentChannelMessage(const AgentChannelMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    result_ = new ::Avanpost::Sso::Agent::Grpc::Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_authenticationfactor()) {
    authenticationfactor_ = new ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor(*from.authenticationfactor_);
  } else {
    authenticationfactor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
}

inline void AgentChannelMessage::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&authenticationfactor_) -
    reinterpret_cast<char*>(&result_)) + sizeof(authenticationfactor_));
}

AgentChannelMessage::~AgentChannelMessage() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentChannelMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete authenticationfactor_;
}

void AgentChannelMessage::ArenaDtor(void* object) {
  AgentChannelMessage* _this = reinterpret_cast< AgentChannelMessage* >(object);
  (void)_this;
}
void AgentChannelMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentChannelMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentChannelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArenaForAllocation() == nullptr && authenticationfactor_ != nullptr) {
    delete authenticationfactor_;
  }
  authenticationfactor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentChannelMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string username = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AgentChannelMessage.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationfactor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentChannelMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // string username = 2;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AgentChannelMessage.username");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_username(), target);
  }

  // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 3;
  if (this->_internal_has_authenticationfactor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::authenticationfactor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
  return target;
}

size_t AgentChannelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 2;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 3;
  if (this->_internal_has_authenticationfactor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authenticationfactor_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentChannelMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentChannelMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentChannelMessage::GetClassData() const { return &_class_data_; }

void AgentChannelMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgentChannelMessage *>(to)->MergeFrom(
      static_cast<const AgentChannelMessage &>(from));
}


void AgentChannelMessage::MergeFrom(const AgentChannelMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (from._internal_has_result()) {
    _internal_mutable_result()->::Avanpost::Sso::Agent::Grpc::Result::MergeFrom(from._internal_result());
  }
  if (from._internal_has_authenticationfactor()) {
    _internal_mutable_authenticationfactor()->::Avanpost::Sso::Agent::Grpc::AuthenticationFactor::MergeFrom(from._internal_authenticationfactor());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentChannelMessage::CopyFrom(const AgentChannelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.AgentChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentChannelMessage::IsInitialized() const {
  return true;
}

void AgentChannelMessage::InternalSwap(AgentChannelMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentChannelMessage, authenticationfactor_)
      + sizeof(AgentChannelMessage::authenticationfactor_)
      - PROTOBUF_FIELD_OFFSET(AgentChannelMessage, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentChannelMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[7]);
}

// ===================================================================

AuthenticationFactor_MetadataEntry_DoNotUse::AuthenticationFactor_MetadataEntry_DoNotUse() {}
AuthenticationFactor_MetadataEntry_DoNotUse::AuthenticationFactor_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AuthenticationFactor_MetadataEntry_DoNotUse::MergeFrom(const AuthenticationFactor_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationFactor_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[8]);
}

// ===================================================================

class AuthenticationFactor::_Internal {
 public:
};

AuthenticationFactor::AuthenticationFactor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
}
AuthenticationFactor::AuthenticationFactor(const AuthenticationFactor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  factor_ = from.factor_;
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
}

inline void AuthenticationFactor::SharedCtor() {
factor_ = 0;
}

AuthenticationFactor::~AuthenticationFactor() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AuthenticationFactor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AuthenticationFactor::ArenaDtor(void* object) {
  AuthenticationFactor* _this = reinterpret_cast< AuthenticationFactor* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void AuthenticationFactor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &AuthenticationFactor::ArenaDtor);
  }
}
void AuthenticationFactor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticationFactor::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  factor_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticationFactor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.FactorType factor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_factor(static_cast<::Avanpost::Sso::Agent::Grpc::FactorType>(val));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticationFactor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.FactorType factor = 1;
  if (this->_internal_factor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_factor(), target);
  }

  // map<string, string> metadata = 2;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "Avanpost.Sso.Agent.Grpc.AuthenticationFactor.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "Avanpost.Sso.Agent.Grpc.AuthenticationFactor.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AuthenticationFactor_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = AuthenticationFactor_MetadataEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
  return target;
}

size_t AuthenticationFactor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += AuthenticationFactor_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .Avanpost.Sso.Agent.Grpc.FactorType factor = 1;
  if (this->_internal_factor() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_factor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticationFactor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthenticationFactor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticationFactor::GetClassData() const { return &_class_data_; }

void AuthenticationFactor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthenticationFactor *>(to)->MergeFrom(
      static_cast<const AuthenticationFactor &>(from));
}


void AuthenticationFactor::MergeFrom(const AuthenticationFactor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from._internal_factor() != 0) {
    _internal_set_factor(from._internal_factor());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticationFactor::CopyFrom(const AuthenticationFactor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.AuthenticationFactor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationFactor::IsInitialized() const {
  return true;
}

void AuthenticationFactor::InternalSwap(AuthenticationFactor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  swap(factor_, other->factor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationFactor::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[9]);
}

// ===================================================================

class ServerChannelMessage::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor& authenticationfactor(const ServerChannelMessage* msg);
};

const ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor&
ServerChannelMessage::_Internal::authenticationfactor(const ServerChannelMessage* msg) {
  return *msg->authenticationfactor_;
}
ServerChannelMessage::ServerChannelMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
}
ServerChannelMessage::ServerChannelMessage(const ServerChannelMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authenticationfactor()) {
    authenticationfactor_ = new ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor(*from.authenticationfactor_);
  } else {
    authenticationfactor_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
}

inline void ServerChannelMessage::SharedCtor() {
authenticationfactor_ = nullptr;
}

ServerChannelMessage::~ServerChannelMessage() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ServerChannelMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete authenticationfactor_;
}

void ServerChannelMessage::ArenaDtor(void* object) {
  ServerChannelMessage* _this = reinterpret_cast< ServerChannelMessage* >(object);
  (void)_this;
}
void ServerChannelMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerChannelMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServerChannelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && authenticationfactor_ != nullptr) {
    delete authenticationfactor_;
  }
  authenticationfactor_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerChannelMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationfactor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServerChannelMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 1;
  if (this->_internal_has_authenticationfactor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authenticationfactor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
  return target;
}

size_t ServerChannelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 1;
  if (this->_internal_has_authenticationfactor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authenticationfactor_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServerChannelMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ServerChannelMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServerChannelMessage::GetClassData() const { return &_class_data_; }

void ServerChannelMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ServerChannelMessage *>(to)->MergeFrom(
      static_cast<const ServerChannelMessage &>(from));
}


void ServerChannelMessage::MergeFrom(const ServerChannelMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_authenticationfactor()) {
    _internal_mutable_authenticationfactor()->::Avanpost::Sso::Agent::Grpc::AuthenticationFactor::MergeFrom(from._internal_authenticationfactor());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServerChannelMessage::CopyFrom(const ServerChannelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.ServerChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerChannelMessage::IsInitialized() const {
  return true;
}

void ServerChannelMessage::InternalSwap(ServerChannelMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(authenticationfactor_, other->authenticationfactor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerChannelMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[10]);
}

// ===================================================================

class ApplicationFactorRequest::_Internal {
 public:
};

ApplicationFactorRequest::ApplicationFactorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
}
ApplicationFactorRequest::ApplicationFactorRequest(const ApplicationFactorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
}

inline void ApplicationFactorRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ApplicationFactorRequest::~ApplicationFactorRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ApplicationFactorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ApplicationFactorRequest::ArenaDtor(void* object) {
  ApplicationFactorRequest* _this = reinterpret_cast< ApplicationFactorRequest* >(object);
  (void)_this;
}
void ApplicationFactorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApplicationFactorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ApplicationFactorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  applicationid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApplicationFactorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string applicationID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest.applicationID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApplicationFactorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string applicationID = 2;
  if (!this->_internal_applicationid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest.applicationID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
  return target;
}

size_t ApplicationFactorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string applicationID = 2;
  if (!this->_internal_applicationid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApplicationFactorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ApplicationFactorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApplicationFactorRequest::GetClassData() const { return &_class_data_; }

void ApplicationFactorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ApplicationFactorRequest *>(to)->MergeFrom(
      static_cast<const ApplicationFactorRequest &>(from));
}


void ApplicationFactorRequest::MergeFrom(const ApplicationFactorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_applicationid().empty()) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApplicationFactorRequest::CopyFrom(const ApplicationFactorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.ApplicationFactorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationFactorRequest::IsInitialized() const {
  return true;
}

void ApplicationFactorRequest::InternalSwap(ApplicationFactorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationid_, lhs_arena,
      &other->applicationid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplicationFactorRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[11]);
}

// ===================================================================

class FactorListResponse::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::Result& result(const FactorListResponse* msg);
};

const ::Avanpost::Sso::Agent::Grpc::Result&
FactorListResponse::_Internal::result(const FactorListResponse* msg) {
  return *msg->result_;
}
FactorListResponse::FactorListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  factors_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.FactorListResponse)
}
FactorListResponse::FactorListResponse(const FactorListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      factors_(from.factors_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::Avanpost::Sso::Agent::Grpc::Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.FactorListResponse)
}

inline void FactorListResponse::SharedCtor() {
result_ = nullptr;
}

FactorListResponse::~FactorListResponse() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.FactorListResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FactorListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void FactorListResponse::ArenaDtor(void* object) {
  FactorListResponse* _this = reinterpret_cast< FactorListResponse* >(object);
  (void)_this;
}
void FactorListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FactorListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FactorListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.FactorListResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  factors_.Clear();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FactorListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Avanpost.Sso.Agent.Grpc.AuthenticationFactor factors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_factors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FactorListResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.FactorListResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // repeated .Avanpost.Sso.Agent.Grpc.AuthenticationFactor factors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_factors_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_factors(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.FactorListResponse)
  return target;
}

size_t FactorListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.FactorListResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Avanpost.Sso.Agent.Grpc.AuthenticationFactor factors = 2;
  total_size += 1UL * this->_internal_factors_size();
  for (const auto& msg : this->factors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FactorListResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FactorListResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FactorListResponse::GetClassData() const { return &_class_data_; }

void FactorListResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FactorListResponse *>(to)->MergeFrom(
      static_cast<const FactorListResponse &>(from));
}


void FactorListResponse::MergeFrom(const FactorListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.FactorListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  factors_.MergeFrom(from.factors_);
  if (from._internal_has_result()) {
    _internal_mutable_result()->::Avanpost::Sso::Agent::Grpc::Result::MergeFrom(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FactorListResponse::CopyFrom(const FactorListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.FactorListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FactorListResponse::IsInitialized() const {
  return true;
}

void FactorListResponse::InternalSwap(FactorListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  factors_.InternalSwap(&other->factors_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FactorListResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[12]);
}

// ===================================================================

class FactorBindingRequest::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor& authenticationfactor(const FactorBindingRequest* msg);
};

const ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor&
FactorBindingRequest::_Internal::authenticationfactor(const FactorBindingRequest* msg) {
  return *msg->authenticationfactor_;
}
FactorBindingRequest::FactorBindingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
}
FactorBindingRequest::FactorBindingRequest(const FactorBindingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_authenticationfactor()) {
    authenticationfactor_ = new ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor(*from.authenticationfactor_);
  } else {
    authenticationfactor_ = nullptr;
  }
  operation_ = from.operation_;
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
}

inline void FactorBindingRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&authenticationfactor_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&authenticationfactor_)) + sizeof(operation_));
}

FactorBindingRequest::~FactorBindingRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FactorBindingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete authenticationfactor_;
}

void FactorBindingRequest::ArenaDtor(void* object) {
  FactorBindingRequest* _this = reinterpret_cast< FactorBindingRequest* >(object);
  (void)_this;
}
void FactorBindingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FactorBindingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FactorBindingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && authenticationfactor_ != nullptr) {
    delete authenticationfactor_;
  }
  authenticationfactor_ = nullptr;
  operation_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FactorBindingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.FactorBindingRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticationfactor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Avanpost.Sso.Agent.Grpc.BindingOperation operation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operation(static_cast<::Avanpost::Sso::Agent::Grpc::BindingOperation>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FactorBindingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.FactorBindingRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 2;
  if (this->_internal_has_authenticationfactor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::authenticationfactor(this), target, stream);
  }

  // .Avanpost.Sso.Agent.Grpc.BindingOperation operation = 3;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
  return target;
}

size_t FactorBindingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // .Avanpost.Sso.Agent.Grpc.AuthenticationFactor authenticationFactor = 2;
  if (this->_internal_has_authenticationfactor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authenticationfactor_);
  }

  // .Avanpost.Sso.Agent.Grpc.BindingOperation operation = 3;
  if (this->_internal_operation() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_operation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FactorBindingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FactorBindingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FactorBindingRequest::GetClassData() const { return &_class_data_; }

void FactorBindingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FactorBindingRequest *>(to)->MergeFrom(
      static_cast<const FactorBindingRequest &>(from));
}


void FactorBindingRequest::MergeFrom(const FactorBindingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (from._internal_has_authenticationfactor()) {
    _internal_mutable_authenticationfactor()->::Avanpost::Sso::Agent::Grpc::AuthenticationFactor::MergeFrom(from._internal_authenticationfactor());
  }
  if (from._internal_operation() != 0) {
    _internal_set_operation(from._internal_operation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FactorBindingRequest::CopyFrom(const FactorBindingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.FactorBindingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FactorBindingRequest::IsInitialized() const {
  return true;
}

void FactorBindingRequest::InternalSwap(FactorBindingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FactorBindingRequest, operation_)
      + sizeof(FactorBindingRequest::operation_)
      - PROTOBUF_FIELD_OFFSET(FactorBindingRequest, authenticationfactor_)>(
          reinterpret_cast<char*>(&authenticationfactor_),
          reinterpret_cast<char*>(&other->authenticationfactor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FactorBindingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[13]);
}

// ===================================================================

AuthenticationRequest_MetadataEntry_DoNotUse::AuthenticationRequest_MetadataEntry_DoNotUse() {}
AuthenticationRequest_MetadataEntry_DoNotUse::AuthenticationRequest_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AuthenticationRequest_MetadataEntry_DoNotUse::MergeFrom(const AuthenticationRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[14]);
}

// ===================================================================

class AuthenticationRequest::_Internal {
 public:
};

AuthenticationRequest::AuthenticationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
}
AuthenticationRequest::AuthenticationRequest(const AuthenticationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  passcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    passcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_passcode().empty()) {
    passcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_passcode(), 
      GetArenaForAllocation());
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state(), 
      GetArenaForAllocation());
  }
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArenaForAllocation());
  }
  factor_ = from.factor_;
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
}

inline void AuthenticationRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
passcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  passcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
factor_ = 0;
}

AuthenticationRequest::~AuthenticationRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AuthenticationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  passcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticationRequest::ArenaDtor(void* object) {
  AuthenticationRequest* _this = reinterpret_cast< AuthenticationRequest* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void AuthenticationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &AuthenticationRequest::ArenaDtor);
  }
}
void AuthenticationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  username_.ClearToEmpty();
  passcode_.ClearToEmpty();
  state_.ClearToEmpty();
  sessionid_.ClearToEmpty();
  applicationid_.ClearToEmpty();
  factor_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string passcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_passcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.passcode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.state"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sessionID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.sessionID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string applicationID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.applicationID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Avanpost.Sso.Agent.Grpc.FactorType factor = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_factor(static_cast<::Avanpost::Sso::Agent::Grpc::FactorType>(val));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string passcode = 2;
  if (!this->_internal_passcode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_passcode().data(), static_cast<int>(this->_internal_passcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.passcode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_passcode(), target);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // string sessionID = 4;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.sessionID");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sessionid(), target);
  }

  // string applicationID = 5;
  if (!this->_internal_applicationid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.applicationID");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_applicationid(), target);
  }

  // .Avanpost.Sso.Agent.Grpc.FactorType factor = 6;
  if (this->_internal_factor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_factor(), target);
  }

  // map<string, string> metadata = 7;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "Avanpost.Sso.Agent.Grpc.AuthenticationRequest.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AuthenticationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = AuthenticationRequest_MetadataEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
  return target;
}

size_t AuthenticationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += AuthenticationRequest_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string passcode = 2;
  if (!this->_internal_passcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_passcode());
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string sessionID = 4;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  // string applicationID = 5;
  if (!this->_internal_applicationid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // .Avanpost.Sso.Agent.Grpc.FactorType factor = 6;
  if (this->_internal_factor() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_factor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthenticationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticationRequest::GetClassData() const { return &_class_data_; }

void AuthenticationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthenticationRequest *>(to)->MergeFrom(
      static_cast<const AuthenticationRequest &>(from));
}


void AuthenticationRequest::MergeFrom(const AuthenticationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_passcode().empty()) {
    _internal_set_passcode(from._internal_passcode());
  }
  if (!from._internal_state().empty()) {
    _internal_set_state(from._internal_state());
  }
  if (!from._internal_sessionid().empty()) {
    _internal_set_sessionid(from._internal_sessionid());
  }
  if (!from._internal_applicationid().empty()) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from._internal_factor() != 0) {
    _internal_set_factor(from._internal_factor());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticationRequest::CopyFrom(const AuthenticationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.AuthenticationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationRequest::IsInitialized() const {
  return true;
}

void AuthenticationRequest::InternalSwap(AuthenticationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &passcode_, lhs_arena,
      &other->passcode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &state_, lhs_arena,
      &other->state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationid_, lhs_arena,
      &other->applicationid_, rhs_arena
  );
  swap(factor_, other->factor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[15]);
}

// ===================================================================

AuthenticationResponse_MetadataEntry_DoNotUse::AuthenticationResponse_MetadataEntry_DoNotUse() {}
AuthenticationResponse_MetadataEntry_DoNotUse::AuthenticationResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AuthenticationResponse_MetadataEntry_DoNotUse::MergeFrom(const AuthenticationResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[16]);
}

// ===================================================================

class AuthenticationResponse::_Internal {
 public:
};

AuthenticationResponse::AuthenticationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  factors_(arena),
  metadata_(arena),
  credentials_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
}
AuthenticationResponse::AuthenticationResponse(const AuthenticationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      factors_(from.factors_),
      credentials_(from.credentials_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state(), 
      GetArenaForAllocation());
  }
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&remainingattemptscount_) -
    reinterpret_cast<char*>(&status_)) + sizeof(remainingattemptscount_));
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
}

inline void AuthenticationResponse::SharedCtor() {
state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&remainingattemptscount_) -
    reinterpret_cast<char*>(&status_)) + sizeof(remainingattemptscount_));
}

AuthenticationResponse::~AuthenticationResponse() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AuthenticationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticationResponse::ArenaDtor(void* object) {
  AuthenticationResponse* _this = reinterpret_cast< AuthenticationResponse* >(object);
  (void)_this;
  _this->metadata_. ~MapField();
}
inline void AuthenticationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &AuthenticationResponse::ArenaDtor);
  }
}
void AuthenticationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  factors_.Clear();
  metadata_.Clear();
  credentials_.Clear();
  state_.ClearToEmpty();
  sessionid_.ClearToEmpty();
  token_.ClearToEmpty();
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remainingattemptscount_) -
      reinterpret_cast<char*>(&status_)) + sizeof(remainingattemptscount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.AuthenticationStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::Avanpost::Sso::Agent::Grpc::AuthenticationStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .Avanpost.Sso.Agent.Grpc.FactorType factors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_factors(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_factors(static_cast<::Avanpost::Sso::Agent::Grpc::FactorType>(val));
        } else
          goto handle_unusual;
        continue;
      // string state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.state"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sessionID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.sessionID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string token = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Avanpost.Sso.Agent.Grpc.UserCredentials credentials = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_credentials(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 remainingAttemptsCount = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          remainingattemptscount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.AuthenticationStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // repeated .Avanpost.Sso.Agent.Grpc.FactorType factors = 2;
  {
    int byte_size = _factors_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, factors_, byte_size, target);
    }
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.state");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_state(), target);
  }

  // string sessionID = 5;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.sessionID");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_sessionid(), target);
  }

  // string token = 6;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.token");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_token(), target);
  }

  // map<string, string> metadata = 7;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "Avanpost.Sso.Agent.Grpc.AuthenticationResponse.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AuthenticationResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = AuthenticationResponse_MetadataEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .Avanpost.Sso.Agent.Grpc.UserCredentials credentials = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_credentials_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_credentials(i), target, stream);
  }

  // int32 remainingAttemptsCount = 9;
  if (this->_internal_remainingattemptscount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_remainingattemptscount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
  return target;
}

size_t AuthenticationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Avanpost.Sso.Agent.Grpc.FactorType factors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_factors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_factors(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _factors_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<string, string> metadata = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += AuthenticationResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .Avanpost.Sso.Agent.Grpc.UserCredentials credentials = 8;
  total_size += 1UL * this->_internal_credentials_size();
  for (const auto& msg : this->credentials_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string state = 3;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string sessionID = 5;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  // string token = 6;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // .Avanpost.Sso.Agent.Grpc.AuthenticationStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // int32 remainingAttemptsCount = 9;
  if (this->_internal_remainingattemptscount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_remainingattemptscount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthenticationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticationResponse::GetClassData() const { return &_class_data_; }

void AuthenticationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthenticationResponse *>(to)->MergeFrom(
      static_cast<const AuthenticationResponse &>(from));
}


void AuthenticationResponse::MergeFrom(const AuthenticationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  factors_.MergeFrom(from.factors_);
  metadata_.MergeFrom(from.metadata_);
  credentials_.MergeFrom(from.credentials_);
  if (!from._internal_state().empty()) {
    _internal_set_state(from._internal_state());
  }
  if (!from._internal_sessionid().empty()) {
    _internal_set_sessionid(from._internal_sessionid());
  }
  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_remainingattemptscount() != 0) {
    _internal_set_remainingattemptscount(from._internal_remainingattemptscount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticationResponse::CopyFrom(const AuthenticationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.AuthenticationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationResponse::IsInitialized() const {
  return true;
}

void AuthenticationResponse::InternalSwap(AuthenticationResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  factors_.InternalSwap(&other->factors_);
  metadata_.InternalSwap(&other->metadata_);
  credentials_.InternalSwap(&other->credentials_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &state_, lhs_arena,
      &other->state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthenticationResponse, remainingattemptscount_)
      + sizeof(AuthenticationResponse::remainingattemptscount_)
      - PROTOBUF_FIELD_OFFSET(AuthenticationResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[17]);
}

// ===================================================================

class ChangePasswordRequest::_Internal {
 public:
};

ChangePasswordRequest::ChangePasswordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
}
ChangePasswordRequest::ChangePasswordRequest(const ChangePasswordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  oldpassword_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    oldpassword_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_oldpassword().empty()) {
    oldpassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_oldpassword(), 
      GetArenaForAllocation());
  }
  newpassword_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    newpassword_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_newpassword().empty()) {
    newpassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_newpassword(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
}

inline void ChangePasswordRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
oldpassword_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  oldpassword_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
newpassword_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  newpassword_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChangePasswordRequest::~ChangePasswordRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ChangePasswordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oldpassword_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newpassword_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChangePasswordRequest::ArenaDtor(void* object) {
  ChangePasswordRequest* _this = reinterpret_cast< ChangePasswordRequest* >(object);
  (void)_this;
}
void ChangePasswordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangePasswordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChangePasswordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  oldpassword_.ClearToEmpty();
  newpassword_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangePasswordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.ChangePasswordRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string oldPassword = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_oldpassword();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.ChangePasswordRequest.oldPassword"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string newPassword = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_newpassword();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.ChangePasswordRequest.newPassword"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangePasswordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.ChangePasswordRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string oldPassword = 2;
  if (!this->_internal_oldpassword().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldpassword().data(), static_cast<int>(this->_internal_oldpassword().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.ChangePasswordRequest.oldPassword");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldpassword(), target);
  }

  // string newPassword = 3;
  if (!this->_internal_newpassword().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newpassword().data(), static_cast<int>(this->_internal_newpassword().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.ChangePasswordRequest.newPassword");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_newpassword(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
  return target;
}

size_t ChangePasswordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string oldPassword = 2;
  if (!this->_internal_oldpassword().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldpassword());
  }

  // string newPassword = 3;
  if (!this->_internal_newpassword().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newpassword());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangePasswordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChangePasswordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangePasswordRequest::GetClassData() const { return &_class_data_; }

void ChangePasswordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChangePasswordRequest *>(to)->MergeFrom(
      static_cast<const ChangePasswordRequest &>(from));
}


void ChangePasswordRequest::MergeFrom(const ChangePasswordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_oldpassword().empty()) {
    _internal_set_oldpassword(from._internal_oldpassword());
  }
  if (!from._internal_newpassword().empty()) {
    _internal_set_newpassword(from._internal_newpassword());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangePasswordRequest::CopyFrom(const ChangePasswordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.ChangePasswordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePasswordRequest::IsInitialized() const {
  return true;
}

void ChangePasswordRequest::InternalSwap(ChangePasswordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &oldpassword_, lhs_arena,
      &other->oldpassword_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &newpassword_, lhs_arena,
      &other->newpassword_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangePasswordRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[18]);
}

// ===================================================================

class ChangePasswordResponse::_Internal {
 public:
};

ChangePasswordResponse::ChangePasswordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
}
ChangePasswordResponse::ChangePasswordResponse(const ChangePasswordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
}

inline void ChangePasswordResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_ = 0;
}

ChangePasswordResponse::~ChangePasswordResponse() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ChangePasswordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChangePasswordResponse::ArenaDtor(void* object) {
  ChangePasswordResponse* _this = reinterpret_cast< ChangePasswordResponse* >(object);
  (void)_this;
}
void ChangePasswordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChangePasswordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChangePasswordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangePasswordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.ChangePasswordStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::Avanpost::Sso::Agent::Grpc::ChangePasswordStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.ChangePasswordResponse.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangePasswordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.ChangePasswordStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.ChangePasswordResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
  return target;
}

size_t ChangePasswordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .Avanpost.Sso.Agent.Grpc.ChangePasswordStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangePasswordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChangePasswordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangePasswordResponse::GetClassData() const { return &_class_data_; }

void ChangePasswordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChangePasswordResponse *>(to)->MergeFrom(
      static_cast<const ChangePasswordResponse &>(from));
}


void ChangePasswordResponse::MergeFrom(const ChangePasswordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangePasswordResponse::CopyFrom(const ChangePasswordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.ChangePasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePasswordResponse::IsInitialized() const {
  return true;
}

void ChangePasswordResponse::InternalSwap(ChangePasswordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangePasswordResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[19]);
}

// ===================================================================

class SessionRequest::_Internal {
 public:
};

SessionRequest::SessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.SessionRequest)
}
SessionRequest::SessionRequest(const SessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArenaForAllocation());
  }
  handledfactor_ = from.handledfactor_;
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.SessionRequest)
}

inline void SessionRequest::SharedCtor() {
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
handledfactor_ = 0;
}

SessionRequest::~SessionRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.SessionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SessionRequest::ArenaDtor(void* object) {
  SessionRequest* _this = reinterpret_cast< SessionRequest* >(object);
  (void)_this;
}
void SessionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.SessionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmpty();
  applicationid_.ClearToEmpty();
  handledfactor_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SessionRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Avanpost.Sso.Agent.Grpc.FactorType handledFactor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_handledfactor(static_cast<::Avanpost::Sso::Agent::Grpc::FactorType>(val));
        } else
          goto handle_unusual;
        continue;
      // string applicationID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SessionRequest.applicationID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.SessionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SessionRequest.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // .Avanpost.Sso.Agent.Grpc.FactorType handledFactor = 2;
  if (this->_internal_handledfactor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_handledfactor(), target);
  }

  // string applicationID = 3;
  if (!this->_internal_applicationid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SessionRequest.applicationID");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_applicationid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.SessionRequest)
  return target;
}

size_t SessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.SessionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string applicationID = 3;
  if (!this->_internal_applicationid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // .Avanpost.Sso.Agent.Grpc.FactorType handledFactor = 2;
  if (this->_internal_handledfactor() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_handledfactor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SessionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionRequest::GetClassData() const { return &_class_data_; }

void SessionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SessionRequest *>(to)->MergeFrom(
      static_cast<const SessionRequest &>(from));
}


void SessionRequest::MergeFrom(const SessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.SessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_applicationid().empty()) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (from._internal_handledfactor() != 0) {
    _internal_set_handledfactor(from._internal_handledfactor());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionRequest::CopyFrom(const SessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.SessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionRequest::IsInitialized() const {
  return true;
}

void SessionRequest::InternalSwap(SessionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationid_, lhs_arena,
      &other->applicationid_, rhs_arena
  );
  swap(handledfactor_, other->handledfactor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[20]);
}

// ===================================================================

class SessionResponse::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::Result& result(const SessionResponse* msg);
};

const ::Avanpost::Sso::Agent::Grpc::Result&
SessionResponse::_Internal::result(const SessionResponse* msg) {
  return *msg->result_;
}
SessionResponse::SessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.SessionResponse)
}
SessionResponse::SessionResponse(const SessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sessionid().empty()) {
    sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sessionid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    result_ = new ::Avanpost::Sso::Agent::Grpc::Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.SessionResponse)
}

inline void SessionResponse::SharedCtor() {
sessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
result_ = nullptr;
}

SessionResponse::~SessionResponse() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.SessionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
}

void SessionResponse::ArenaDtor(void* object) {
  SessionResponse* _this = reinterpret_cast< SessionResponse* >(object);
  (void)_this;
}
void SessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.SessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessionid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sessionID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SessionResponse.sessionID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.SessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // string sessionID = 2;
  if (!this->_internal_sessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sessionid().data(), static_cast<int>(this->_internal_sessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SessionResponse.sessionID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sessionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.SessionResponse)
  return target;
}

size_t SessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.SessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sessionID = 2;
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sessionid());
  }

  // .Avanpost.Sso.Agent.Grpc.Result result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionResponse::GetClassData() const { return &_class_data_; }

void SessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SessionResponse *>(to)->MergeFrom(
      static_cast<const SessionResponse &>(from));
}


void SessionResponse::MergeFrom(const SessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.SessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _internal_set_sessionid(from._internal_sessionid());
  }
  if (from._internal_has_result()) {
    _internal_mutable_result()->::Avanpost::Sso::Agent::Grpc::Result::MergeFrom(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionResponse::CopyFrom(const SessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.SessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionResponse::IsInitialized() const {
  return true;
}

void SessionResponse::InternalSwap(SessionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sessionid_, lhs_arena,
      &other->sessionid_, rhs_arena
  );
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[21]);
}

// ===================================================================

class SetUserCredentialRequest::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::PasswordInfo& password(const SetUserCredentialRequest* msg);
};

const ::Avanpost::Sso::Agent::Grpc::PasswordInfo&
SetUserCredentialRequest::_Internal::password(const SetUserCredentialRequest* msg) {
  return *msg->password_;
}
SetUserCredentialRequest::SetUserCredentialRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
}
SetUserCredentialRequest::SetUserCredentialRequest(const SetUserCredentialRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_applicationid().empty()) {
    applicationid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_applicationid(), 
      GetArenaForAllocation());
  }
  credentialid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    credentialid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_credentialid().empty()) {
    credentialid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_credentialid(), 
      GetArenaForAllocation());
  }
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    comment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comment().empty()) {
    comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comment(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_password()) {
    password_ = new ::Avanpost::Sso::Agent::Grpc::PasswordInfo(*from.password_);
  } else {
    password_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
}

inline void SetUserCredentialRequest::SharedCtor() {
applicationid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  applicationid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
credentialid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  credentialid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  comment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
password_ = nullptr;
}

SetUserCredentialRequest::~SetUserCredentialRequest() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetUserCredentialRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  applicationid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credentialid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete password_;
}

void SetUserCredentialRequest::ArenaDtor(void* object) {
  SetUserCredentialRequest* _this = reinterpret_cast< SetUserCredentialRequest* >(object);
  (void)_this;
}
void SetUserCredentialRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetUserCredentialRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetUserCredentialRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationid_.ClearToEmpty();
  credentialid_.ClearToEmpty();
  username_.ClearToEmpty();
  domain_.ClearToEmpty();
  comment_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && password_ != nullptr) {
    delete password_;
  }
  password_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetUserCredentialRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string applicationID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_applicationid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.applicationID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string credentialID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_credentialid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.credentialID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string username = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.username"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Avanpost.Sso.Agent.Grpc.PasswordInfo password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_password(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string domain = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_domain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.domain"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string comment = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_comment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.comment"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetUserCredentialRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationID = 1;
  if (!this->_internal_applicationid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationid().data(), static_cast<int>(this->_internal_applicationid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.applicationID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationid(), target);
  }

  // string credentialID = 2;
  if (!this->_internal_credentialid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_credentialid().data(), static_cast<int>(this->_internal_credentialid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.credentialID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_credentialid(), target);
  }

  // string username = 3;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.username");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_username(), target);
  }

  // .Avanpost.Sso.Agent.Grpc.PasswordInfo password = 4;
  if (this->_internal_has_password()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::password(this), target, stream);
  }

  // string domain = 5;
  if (!this->_internal_domain().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.domain");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_domain(), target);
  }

  // string comment = 6;
  if (!this->_internal_comment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comment().data(), static_cast<int>(this->_internal_comment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest.comment");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_comment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
  return target;
}

size_t SetUserCredentialRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationID = 1;
  if (!this->_internal_applicationid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationid());
  }

  // string credentialID = 2;
  if (!this->_internal_credentialid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_credentialid());
  }

  // string username = 3;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string domain = 5;
  if (!this->_internal_domain().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  // string comment = 6;
  if (!this->_internal_comment().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comment());
  }

  // .Avanpost.Sso.Agent.Grpc.PasswordInfo password = 4;
  if (this->_internal_has_password()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *password_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetUserCredentialRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetUserCredentialRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetUserCredentialRequest::GetClassData() const { return &_class_data_; }

void SetUserCredentialRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetUserCredentialRequest *>(to)->MergeFrom(
      static_cast<const SetUserCredentialRequest &>(from));
}


void SetUserCredentialRequest::MergeFrom(const SetUserCredentialRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_applicationid().empty()) {
    _internal_set_applicationid(from._internal_applicationid());
  }
  if (!from._internal_credentialid().empty()) {
    _internal_set_credentialid(from._internal_credentialid());
  }
  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_domain().empty()) {
    _internal_set_domain(from._internal_domain());
  }
  if (!from._internal_comment().empty()) {
    _internal_set_comment(from._internal_comment());
  }
  if (from._internal_has_password()) {
    _internal_mutable_password()->::Avanpost::Sso::Agent::Grpc::PasswordInfo::MergeFrom(from._internal_password());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetUserCredentialRequest::CopyFrom(const SetUserCredentialRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserCredentialRequest::IsInitialized() const {
  return true;
}

void SetUserCredentialRequest::InternalSwap(SetUserCredentialRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &applicationid_, lhs_arena,
      &other->applicationid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &credentialid_, lhs_arena,
      &other->credentialid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &domain_, lhs_arena,
      &other->domain_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comment_, lhs_arena,
      &other->comment_, rhs_arena
  );
  swap(password_, other->password_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetUserCredentialRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[22]);
}

// ===================================================================

class PasswordInfo::_Internal {
 public:
};

PasswordInfo::PasswordInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.PasswordInfo)
}
PasswordInfo::PasswordInfo(const PasswordInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_password(), 
      GetArenaForAllocation());
  }
  passwordconfirm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    passwordconfirm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_passwordconfirm().empty()) {
    passwordconfirm_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_passwordconfirm(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.PasswordInfo)
}

inline void PasswordInfo::SharedCtor() {
password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
passwordconfirm_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  passwordconfirm_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PasswordInfo::~PasswordInfo() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.PasswordInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PasswordInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  passwordconfirm_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PasswordInfo::ArenaDtor(void* object) {
  PasswordInfo* _this = reinterpret_cast< PasswordInfo* >(object);
  (void)_this;
}
void PasswordInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PasswordInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PasswordInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.PasswordInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  password_.ClearToEmpty();
  passwordconfirm_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PasswordInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string password = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.PasswordInfo.password"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string passwordConfirm = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_passwordconfirm();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.PasswordInfo.passwordConfirm"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PasswordInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.PasswordInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string password = 1;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.PasswordInfo.password");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_password(), target);
  }

  // string passwordConfirm = 2;
  if (!this->_internal_passwordconfirm().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_passwordconfirm().data(), static_cast<int>(this->_internal_passwordconfirm().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.PasswordInfo.passwordConfirm");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_passwordconfirm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.PasswordInfo)
  return target;
}

size_t PasswordInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.PasswordInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string password = 1;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string passwordConfirm = 2;
  if (!this->_internal_passwordconfirm().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_passwordconfirm());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PasswordInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PasswordInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PasswordInfo::GetClassData() const { return &_class_data_; }

void PasswordInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PasswordInfo *>(to)->MergeFrom(
      static_cast<const PasswordInfo &>(from));
}


void PasswordInfo::MergeFrom(const PasswordInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.PasswordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_password().empty()) {
    _internal_set_password(from._internal_password());
  }
  if (!from._internal_passwordconfirm().empty()) {
    _internal_set_passwordconfirm(from._internal_passwordconfirm());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PasswordInfo::CopyFrom(const PasswordInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.PasswordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PasswordInfo::IsInitialized() const {
  return true;
}

void PasswordInfo::InternalSwap(PasswordInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &passwordconfirm_, lhs_arena,
      &other->passwordconfirm_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PasswordInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[23]);
}

// ===================================================================

class SetUserCredentialResponse::_Internal {
 public:
  static const ::Avanpost::Sso::Agent::Grpc::PasswordInfo& password(const SetUserCredentialResponse* msg);
};

const ::Avanpost::Sso::Agent::Grpc::PasswordInfo&
SetUserCredentialResponse::_Internal::password(const SetUserCredentialResponse* msg) {
  return *msg->password_;
}
SetUserCredentialResponse::SetUserCredentialResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
}
SetUserCredentialResponse::SetUserCredentialResponse(const SetUserCredentialResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errortext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    errortext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errortext().empty()) {
    errortext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errortext(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_password()) {
    password_ = new ::Avanpost::Sso::Agent::Grpc::PasswordInfo(*from.password_);
  } else {
    password_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
}

inline void SetUserCredentialResponse::SharedCtor() {
errortext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  errortext_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&password_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&password_)) + sizeof(status_));
}

SetUserCredentialResponse::~SetUserCredentialResponse() {
  // @@protoc_insertion_point(destructor:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetUserCredentialResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  errortext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete password_;
}

void SetUserCredentialResponse::ArenaDtor(void* object) {
  SetUserCredentialResponse* _this = reinterpret_cast< SetUserCredentialResponse* >(object);
  (void)_this;
}
void SetUserCredentialResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetUserCredentialResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetUserCredentialResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errortext_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && password_ != nullptr) {
    delete password_;
  }
  password_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetUserCredentialResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Avanpost.Sso.Agent.Grpc.SetUserCredentialStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::Avanpost::Sso::Agent::Grpc::SetUserCredentialStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // .Avanpost.Sso.Agent.Grpc.PasswordInfo password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_password(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string errorText = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_errortext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse.errorText"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetUserCredentialResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Avanpost.Sso.Agent.Grpc.SetUserCredentialStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // .Avanpost.Sso.Agent.Grpc.PasswordInfo password = 2;
  if (this->_internal_has_password()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::password(this), target, stream);
  }

  // string errorText = 3;
  if (!this->_internal_errortext().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errortext().data(), static_cast<int>(this->_internal_errortext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse.errorText");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_errortext(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
  return target;
}

size_t SetUserCredentialResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorText = 3;
  if (!this->_internal_errortext().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errortext());
  }

  // .Avanpost.Sso.Agent.Grpc.PasswordInfo password = 2;
  if (this->_internal_has_password()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *password_);
  }

  // .Avanpost.Sso.Agent.Grpc.SetUserCredentialStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetUserCredentialResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetUserCredentialResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetUserCredentialResponse::GetClassData() const { return &_class_data_; }

void SetUserCredentialResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetUserCredentialResponse *>(to)->MergeFrom(
      static_cast<const SetUserCredentialResponse &>(from));
}


void SetUserCredentialResponse::MergeFrom(const SetUserCredentialResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errortext().empty()) {
    _internal_set_errortext(from._internal_errortext());
  }
  if (from._internal_has_password()) {
    _internal_mutable_password()->::Avanpost::Sso::Agent::Grpc::PasswordInfo::MergeFrom(from._internal_password());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetUserCredentialResponse::CopyFrom(const SetUserCredentialResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Avanpost.Sso.Agent.Grpc.SetUserCredentialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserCredentialResponse::IsInitialized() const {
  return true;
}

void SetUserCredentialResponse::InternalSwap(SetUserCredentialResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &errortext_, lhs_arena,
      &other->errortext_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetUserCredentialResponse, status_)
      + sizeof(SetUserCredentialResponse::status_)
      - PROTOBUF_FIELD_OFFSET(SetUserCredentialResponse, password_)>(
          reinterpret_cast<char*>(&password_),
          reinterpret_cast<char*>(&other->password_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetUserCredentialResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agentcontrol_2eproto_getter, &descriptor_table_agentcontrol_2eproto_once,
      file_level_metadata_agentcontrol_2eproto[24]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Agent
}  // namespace Sso
}  // namespace Avanpost
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::Result* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::Result >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::UserRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::UserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::UserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::TemporaryAuthCodeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::UserApplicationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::Application* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::Application >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::Application >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::UserCredentials* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::UserCredentials >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::UserCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::AgentChannelMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::AuthenticationFactor >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::ServerChannelMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::ApplicationFactorRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::ApplicationFactorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::ApplicationFactorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::FactorListResponse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::FactorListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::FactorListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::FactorBindingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::AuthenticationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::AuthenticationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::ChangePasswordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::ChangePasswordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::SessionRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::SessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::SessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::SessionResponse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::SessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::SessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::PasswordInfo* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::PasswordInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::PasswordInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse* Arena::CreateMaybeMessage< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Avanpost::Sso::Agent::Grpc::SetUserCredentialResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
